{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diogo\\\\Desktop\\\\MultiFlowML\\\\multiflow\\\\app\\\\react-app\\\\src\\\\components\\\\AddStream.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddStream() {\n  _s();\n  const navigate = useNavigate();\n  const [topic, setTopic] = useState('');\n  const [description, setDescription] = useState('');\n  const [dataSourceType, setDataSourceType] = useState('');\n  const [additionalField, setAdditionalField] = useState('');\n  const [playbackConfigType, setPlaybackConfigType] = useState('');\n  const [playbackConfigValue, setPlaybackConfigValue] = useState('');\n  const [dataSourceId, setDataSourceId] = useState('');\n  const [dataSources, setDataSources] = useState([]);\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const projectId = queryParams.get('projectId');\n  const handleAdditionalFieldChange = e => {\n    setAdditionalField(e.target.value);\n  };\n  const handleDataSourceChange = e => {\n    const selectedDataSourceId = e.target.value;\n    setDataSourceId(selectedDataSourceId);\n    setAdditionalField(selectedDataSourceId);\n  };\n\n  // Function that handles the create stream endpoint\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      let postData = {\n        projectId,\n        topic,\n        description,\n        dataSourceType,\n        dataSourceId\n      };\n\n      // Conditionally add additionalField based on dataSourceType\n      if (dataSourceType === 'SQL') {\n        postData.connectionString = additionalField;\n      } else if (dataSourceType === 'SavedDataSource') {\n        postData.dataSourceId = additionalField;\n      } else if (dataSourceType === 'File') {\n        postData.filePath = additionalField;\n      }\n\n      // Conditionally add playback configuration based on playbackConfigType\n      if (playbackConfigType === 'linesPerSecond' || playbackConfigType === 'allInSeconds') {\n        // Set the playbackConfigType to the selected value\n        postData.playbackConfigType = playbackConfigType;\n        // Set the corresponding value based on the selected playbackConfigType\n        postData[playbackConfigType] = playbackConfigValue;\n      } else if (playbackConfigType === 'realTime') {\n        // For realTime playbackConfigType, no additional value is needed\n        postData.playbackConfigType = 'realTime';\n        postData.realTime = true;\n      }\n      await axios.post('http://localhost:3001/streams', postData);\n      // Redirect the user to the streams page after adding the stream\n      navigate(`/projects/${projectId}`);\n    } catch (error) {\n      console.error('Error adding stream:', error);\n    }\n  };\n\n  // Function to cancel stream creation and return to project details page\n  const handleCancel = () => {\n    // Navigate back to the project details page\n    navigate(`/projects/${projectId}`);\n  };\n\n  // Function to get the Saved Data Sources\n  useEffect(() => {\n    // Fetch data sources from the server\n    const fetchDataSources = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/dataSources');\n        setDataSources(response.data);\n      } catch (error) {\n        console.error('Error fetching data sources:', error);\n      }\n    };\n    fetchDataSources();\n\n    // Getting the list of datasets in datasets folder\n    const fetchFiles = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/dataSources/datasets');\n        setFiles(response.data);\n      } catch (error) {\n        console.error('Error fetching files:', error);\n      }\n    };\n    if (dataSourceType === 'File') {\n      fetchFiles();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header mt-2\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-title\",\n        children: \"Add new stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-content mt-2\",\n      style: {\n        backgroundColor: '#E6E8E6',\n        borderRadius: '8px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container ps-4 pe-4 pt-3 pb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              name: \"projectId\",\n              value: projectId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"topic\",\n                className: \"form-label\",\n                children: \"Stream Topic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"topic\",\n                placeholder: \"Enter the stream topic\",\n                value: topic,\n                onChange: e => setTopic(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"description\",\n                className: \"form-label\",\n                children: \"Stream Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"form-control\",\n                id: \"description\",\n                placeholder: \"Enter the description\",\n                value: description,\n                onChange: e => setDescription(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-start align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3 col-3 me-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"dataSourceType\",\n                  className: \"form-label\",\n                  children: \"Data Source Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select\",\n                  id: \"dataSourceType\",\n                  value: dataSourceType,\n                  onChange: e => setDataSourceType(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Data Source Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"SQL\",\n                    children: \"SQL\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"File\",\n                    children: \"File\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"SavedDataSource\",\n                    children: \"Saved Data Source\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this), dataSourceType === 'SQL' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3 col-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"connectionString\",\n                  className: \"form-label\",\n                  children: \"Connection String\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"connectionString\",\n                  value: additionalField,\n                  onChange: handleAdditionalFieldChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 37\n              }, this), dataSourceType === 'File' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3 col-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"filePath\",\n                  className: \"form-label\",\n                  children: \"File Path\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"filePath\",\n                  value: additionalField,\n                  onChange: handleAdditionalFieldChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this), dataSourceType === 'SavedDataSource' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3 col-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"dataSourceId\",\n                  className: \"form-label\",\n                  children: \"Select Data Source\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select\",\n                  id: \"dataSourceId\",\n                  value: dataSourceId,\n                  onChange: handleDataSourceChange,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Data Source\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 45\n                  }, this), dataSources.map(dataSource => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: dataSource._id,\n                    children: dataSource.name\n                  }, dataSource._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 49\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-start align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3 col-3 me-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"playbackConfigType\",\n                  className: \"form-label\",\n                  children: \"Playback Configuration Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select\",\n                  id: \"playbackConfigType\",\n                  value: playbackConfigType,\n                  onChange: e => setPlaybackConfigType(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Playback Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"linesPerSecond\",\n                    children: \"Lines per Second\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"allInSeconds\",\n                    children: \"All in Seconds\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"realTime\",\n                    children: \"Real Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this), (playbackConfigType === 'linesPerSecond' || playbackConfigType === 'allInSeconds') && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3 col-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"playbackConfigValue\",\n                  className: \"form-label\",\n                  children: \"Playback Value\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"form-control\",\n                  id: \"playbackConfigValue\",\n                  value: playbackConfigValue,\n                  onChange: e => setPlaybackConfigValue(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-end\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-danger me-2\",\n                style: {\n                  fontWeight: '500'\n                },\n                onClick: handleCancel,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                style: {\n                  fontWeight: '500'\n                },\n                children: \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n_s(AddStream, \"DJoPmGQe5rPWyxFKGO3JEDz0Yfs=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AddStream;\nexport default AddStream;\nvar _c;\n$RefreshReg$(_c, \"AddStream\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","AddStream","_s","navigate","topic","setTopic","description","setDescription","dataSourceType","setDataSourceType","additionalField","setAdditionalField","playbackConfigType","setPlaybackConfigType","playbackConfigValue","setPlaybackConfigValue","dataSourceId","setDataSourceId","dataSources","setDataSources","location","queryParams","URLSearchParams","search","projectId","get","handleAdditionalFieldChange","e","target","value","handleDataSourceChange","selectedDataSourceId","handleSubmit","preventDefault","postData","connectionString","filePath","realTime","post","error","console","handleCancel","fetchDataSources","response","data","fetchFiles","setFiles","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","borderRadius","onSubmit","type","name","htmlFor","id","placeholder","onChange","map","dataSource","_id","fontWeight","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Diogo/Desktop/MultiFlowML/multiflow/app/react-app/src/components/AddStream.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction AddStream() {\r\n    const navigate = useNavigate();\r\n    const [topic, setTopic] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [dataSourceType, setDataSourceType] = useState('');\r\n    const [additionalField, setAdditionalField] = useState('');\r\n    const [playbackConfigType, setPlaybackConfigType] = useState('');\r\n    const [playbackConfigValue, setPlaybackConfigValue] = useState('');\r\n    const [dataSourceId, setDataSourceId] = useState('');\r\n    const [dataSources, setDataSources] = useState([]);\r\n    const location = useLocation();\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const projectId = queryParams.get('projectId');\r\n\r\n    const handleAdditionalFieldChange = (e) => {\r\n        setAdditionalField(e.target.value);\r\n    };\r\n\r\n    const handleDataSourceChange = (e) => {\r\n        const selectedDataSourceId = e.target.value;\r\n        setDataSourceId(selectedDataSourceId);\r\n        setAdditionalField(selectedDataSourceId);\r\n    };\r\n\r\n    // Function that handles the create stream endpoint\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            let postData = { projectId, topic, description, dataSourceType, dataSourceId };\r\n\r\n            // Conditionally add additionalField based on dataSourceType\r\n            if (dataSourceType === 'SQL') {\r\n                postData.connectionString = additionalField;\r\n            } else if (dataSourceType === 'SavedDataSource') {\r\n                postData.dataSourceId = additionalField;\r\n            } else if (dataSourceType === 'File') {\r\n                postData.filePath = additionalField;\r\n            }\r\n\r\n            // Conditionally add playback configuration based on playbackConfigType\r\n            if (playbackConfigType === 'linesPerSecond' || playbackConfigType === 'allInSeconds') {\r\n                // Set the playbackConfigType to the selected value\r\n                postData.playbackConfigType = playbackConfigType;\r\n                // Set the corresponding value based on the selected playbackConfigType\r\n                postData[playbackConfigType] = playbackConfigValue;\r\n            } else if (playbackConfigType === 'realTime') {\r\n                // For realTime playbackConfigType, no additional value is needed\r\n                postData.playbackConfigType = 'realTime';\r\n                postData.realTime = true;\r\n            }\r\n\r\n            await axios.post('http://localhost:3001/streams', postData);\r\n            // Redirect the user to the streams page after adding the stream\r\n            navigate(`/projects/${projectId}`);\r\n        } catch (error) {\r\n            console.error('Error adding stream:', error);\r\n        }\r\n    };\r\n\r\n    // Function to cancel stream creation and return to project details page\r\n    const handleCancel = () => {\r\n        // Navigate back to the project details page\r\n        navigate(`/projects/${projectId}`);\r\n    };\r\n\r\n    // Function to get the Saved Data Sources\r\n    useEffect(() => {\r\n        // Fetch data sources from the server\r\n        const fetchDataSources = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:3001/dataSources');\r\n                setDataSources(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching data sources:', error);\r\n            }\r\n        };\r\n\r\n        fetchDataSources();\r\n\r\n        // Getting the list of datasets in datasets folder\r\n        const fetchFiles = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:3001/dataSources/datasets');\r\n                setFiles(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching files:', error);\r\n            }\r\n        };\r\n        if (dataSourceType === 'File') {\r\n            fetchFiles();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {/* Page header */}\r\n            <div className='page-header mt-2'>\r\n                <h1 className='page-title'>Add new stream</h1>\r\n            </div>\r\n\r\n            {/* Form */}\r\n            <div className='panel-content mt-2' style={{ backgroundColor: '#E6E8E6', borderRadius: '8px' }}>\r\n                <div className='container ps-4 pe-4 pt-3 pb-4'>\r\n                    <div className='col-12'>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <input type=\"hidden\" name=\"projectId\" value={projectId} />\r\n                            {/* Stream Topic */}\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"topic\" className=\"form-label\">Stream Topic</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"topic\" placeholder='Enter the stream topic' value={topic} onChange={(e) => setTopic(e.target.value)} />\r\n                            </div>\r\n                            {/* Stream Description */}\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"description\" className=\"form-label\">Stream Description</label>\r\n                                <textarea className=\"form-control\" id=\"description\" placeholder='Enter the description' value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                            </div>\r\n                            {/* Data Source Type DropDown Menu */}\r\n                            <div className='d-flex justify-content-start align-items-center'>\r\n                                <div className=\"mb-3 col-3 me-4\">\r\n                                    <label htmlFor=\"dataSourceType\" className=\"form-label\">Data Source Type</label>\r\n                                    <select className=\"form-select\" id=\"dataSourceType\" value={dataSourceType} onChange={(e) => setDataSourceType(e.target.value)}>\r\n                                        <option value=\"\">Select Data Source Type</option>\r\n                                        <option value=\"SQL\">SQL</option>\r\n                                        <option value=\"File\">File</option>\r\n                                        <option value=\"SavedDataSource\">Saved Data Source</option>\r\n                                    </select>\r\n                                </div>\r\n                                {/* Render additional field based on selected dataSourceType */}\r\n                                {dataSourceType === 'SQL' && (\r\n                                    <div className=\"mb-3 col-3\">\r\n                                        <label htmlFor=\"connectionString\" className=\"form-label\">Connection String</label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"connectionString\" value={additionalField} onChange={handleAdditionalFieldChange} />\r\n                                    </div>\r\n                                )}\r\n                                {dataSourceType === 'File' && (\r\n                                    <div className=\"mb-3 col-3\">\r\n                                        <label htmlFor=\"filePath\" className=\"form-label\">File Path</label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"filePath\" value={additionalField} onChange={handleAdditionalFieldChange} />\r\n                                    </div>\r\n                                )}\r\n                                {dataSourceType === 'SavedDataSource' && (\r\n                                    <div className=\"mb-3 col-3\">\r\n                                        <label htmlFor=\"dataSourceId\" className=\"form-label\">Select Data Source</label>\r\n                                        <select className=\"form-select\" id=\"dataSourceId\" value={dataSourceId} onChange={handleDataSourceChange}>\r\n                                            <option value=\"\">Select Data Source</option>\r\n                                            {dataSources.map(dataSource => (\r\n                                                <option key={dataSource._id} value={dataSource._id}>{dataSource.name}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            {/* Playback Configuration */}\r\n                            <div className='d-flex justify-content-start align-items-center'>\r\n                                <div className=\"mb-3 col-3 me-4\">\r\n                                    <label htmlFor=\"playbackConfigType\" className=\"form-label\">Playback Configuration Type</label>\r\n                                    <select className=\"form-select\" id=\"playbackConfigType\" value={playbackConfigType} onChange={(e) => setPlaybackConfigType(e.target.value)}>\r\n                                        <option value=\"\">Select Playback Type</option>\r\n                                        <option value=\"linesPerSecond\">Lines per Second</option>\r\n                                        <option value=\"allInSeconds\">All in Seconds</option>\r\n                                        <option value=\"realTime\">Real Time</option>\r\n                                    </select>\r\n                                </div>\r\n                                {/* Render additional field based on selected playbackConfigType */}\r\n                                {(playbackConfigType === 'linesPerSecond' || playbackConfigType === 'allInSeconds') && (\r\n                                    <div className=\"mb-3 col-3\">\r\n                                        <label htmlFor=\"playbackConfigValue\" className=\"form-label\">Playback Value</label>\r\n                                        <input type=\"number\" className=\"form-control\" id=\"playbackConfigValue\" value={playbackConfigValue} onChange={(e) => setPlaybackConfigValue(e.target.value)} />\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            {/* Cancel and Confirm Btns */}\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <button type=\"button\" className=\"btn btn-danger me-2\" style={{ fontWeight: '500' }} onClick={handleCancel}>Cancel</button>\r\n                                <button type=\"submit\" className=\"btn btn-primary\" style={{ fontWeight: '500' }}>Create</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddStream;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}