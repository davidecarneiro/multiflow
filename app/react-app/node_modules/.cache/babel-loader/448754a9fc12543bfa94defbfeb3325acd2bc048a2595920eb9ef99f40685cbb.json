{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diogo\\\\Desktop\\\\MultiFlowML\\\\multiflow\\\\app\\\\react-app\\\\src\\\\components\\\\EditStream.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditStream() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [topic, setTopic] = useState('');\n  const [description, setDescription] = useState('');\n  const [dataSourceType, setDataSourceType] = useState('');\n  const [additionalField, setAdditionalField] = useState('');\n  const [playbackConfigType, setPlaybackConfigType] = useState('');\n  const [playbackConfigValue, setPlaybackConfigValue] = useState('');\n  const [dataSourceId, setDataSourceId] = useState('');\n  const [dataSources, setDataSources] = useState([]);\n  const [filePath, setFilePath] = useState('');\n  const [files, setFiles] = useState([]);\n\n  // Getting stream details to prepopulate forms\n  useEffect(() => {\n    const fetchStream = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3001/streams/${id}`);\n        const {\n          topic,\n          description,\n          dataSourceType,\n          dataSourceId,\n          playbackConfigType,\n          linesPerSecond,\n          allInSeconds\n        } = response.data;\n        setTopic(topic);\n        setDescription(description);\n        setDataSourceType(dataSourceType);\n        setDataSourceId(dataSourceId);\n        setPlaybackConfigType(playbackConfigType);\n\n        // Set playbackConfigValue based on playbackConfigType\n        if (playbackConfigType === 'linesPerSecond') {\n          setPlaybackConfigValue(linesPerSecond);\n        } else if (playbackConfigType === 'allInSeconds') {\n          setPlaybackConfigValue(allInSeconds);\n        } else {\n          setPlaybackConfigValue(''); // Set to default or empty if playbackConfigType is not recognized\n        }\n        setAdditionalField(dataSourceId); // Assuming additionalField is derived from dataSourceId\n      } catch (error) {\n        console.error('Error fetching stream:', error);\n      }\n    };\n    fetchStream();\n\n    // Fetch data sources from the server\n    const fetchDataSources = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/dataSources');\n        setDataSources(response.data);\n      } catch (error) {\n        console.error('Error fetching data sources:', error);\n      }\n    };\n    fetchDataSources();\n  }, [id]);\n  const handleAdditionalFieldChange = e => {\n    setAdditionalField(e.target.value);\n  };\n\n  // Function that submits the form and updates stream details\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      let postData = {\n        topic,\n        description,\n        dataSourceType,\n        dataSourceId,\n        playbackConfigType,\n        playbackConfigValue\n      };\n\n      // Conditionally add additionalField based on dataSourceType\n      if (dataSourceType === 'SQL') {\n        postData.connectionString = additionalField;\n      } else if (dataSourceType === 'SavedDataSource') {\n        postData.dataSourceId = additionalField;\n      } else if (dataSourceType === 'File') {\n        postData.filePath = additionalField;\n      }\n\n      // Conditionally add playback configuration based on playbackConfigType\n      if (playbackConfigType === 'linesPerSecond' || playbackConfigType === 'allInSeconds') {\n        postData[playbackConfigType] = playbackConfigValue;\n      } else if (playbackConfigType === 'realTime') {\n        postData.realTime = true;\n      }\n      await axios.put(`http://localhost:3001/streams/${id}`, postData);\n      // Redirect the user to the streams page after updating the stream\n      navigate(`/streams/${id}`);\n    } catch (error) {\n      console.error('Error updating stream:', error);\n    }\n  };\n\n  // Function that returns to details on canceling edit\n  const handleCancel = () => {\n    // Navigate back to the streams page\n    navigate(`/streams/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header mt-2\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-title\",\n        children: \"Edit Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-content mt-2\",\n      style: {\n        backgroundColor: '#E6E8E6',\n        borderRadius: '8px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container ps-4 pe-4 pt-3 pb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"topic\",\n                className: \"form-label\",\n                children: \"Stream Topic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"topic\",\n                placeholder: \"Enter the stream topic\",\n                value: topic,\n                onChange: e => setTopic(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"description\",\n                className: \"form-label\",\n                children: \"Stream Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"form-control\",\n                id: \"description\",\n                placeholder: \"Enter the description\",\n                value: description,\n                onChange: e => setDescription(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-start align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3 col-3 me-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"dataSourceType\",\n                  className: \"form-label\",\n                  children: \"Data Source Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select\",\n                  id: \"dataSourceType\",\n                  value: dataSourceType,\n                  onChange: e => setDataSourceType(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Data Source Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"SQL\",\n                    children: \"SQL\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"File\",\n                    children: \"File\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"SavedDataSource\",\n                    children: \"Saved Data Source\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this), dataSourceType === 'SQL' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3 col-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"connectionString\",\n                  className: \"form-label\",\n                  children: \"Connection String\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"connectionString\",\n                  value: additionalField,\n                  onChange: handleAdditionalFieldChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 37\n              }, this), dataSourceType === 'File' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3 col-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"filePath\",\n                  className: \"form-label\",\n                  children: \"File Path\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"filePath\",\n                  value: additionalField,\n                  onChange: handleAdditionalFieldChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 37\n              }, this), dataSourceType === 'SavedDataSource' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3 col-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"dataSourceId\",\n                  className: \"form-label\",\n                  children: \"Select Data Source\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select\",\n                  id: \"dataSourceId\",\n                  value: dataSourceId,\n                  onChange: e => setDataSourceId(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Data Source\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 45\n                  }, this), dataSources.map(dataSource => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: dataSource._id,\n                    children: dataSource.name\n                  }, dataSource._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 49\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-start align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3 col-3 me-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"playbackConfigType\",\n                  className: \"form-label\",\n                  children: \"Playback Configuration Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select\",\n                  id: \"playbackConfigType\",\n                  value: playbackConfigType,\n                  onChange: e => setPlaybackConfigType(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Playback Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"linesPerSecond\",\n                    children: \"Lines per Second\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"allInSeconds\",\n                    children: \"All in Seconds\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"realTime\",\n                    children: \"Real Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this), (playbackConfigType === 'linesPerSecond' || playbackConfigType === 'allInSeconds') && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3 col-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"playbackConfigValue\",\n                  className: \"form-label\",\n                  children: \"Playback Value\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"form-control\",\n                  id: \"playbackConfigValue\",\n                  value: playbackConfigValue,\n                  onChange: e => setPlaybackConfigValue(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-end\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-danger me-2\",\n                style: {\n                  fontWeight: '500'\n                },\n                onClick: handleCancel,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                style: {\n                  fontWeight: '500'\n                },\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n_s(EditStream, \"O5wVUCm6+DRtadFzQg1lMnxITPw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditStream;\nexport default EditStream;\nvar _c;\n$RefreshReg$(_c, \"EditStream\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useLocation","axios","jsxDEV","_jsxDEV","EditStream","_s","id","navigate","topic","setTopic","description","setDescription","dataSourceType","setDataSourceType","additionalField","setAdditionalField","playbackConfigType","setPlaybackConfigType","playbackConfigValue","setPlaybackConfigValue","dataSourceId","setDataSourceId","dataSources","setDataSources","filePath","setFilePath","files","setFiles","fetchStream","response","get","linesPerSecond","allInSeconds","data","error","console","fetchDataSources","handleAdditionalFieldChange","e","target","value","handleSubmit","preventDefault","postData","connectionString","realTime","put","handleCancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","borderRadius","onSubmit","htmlFor","type","placeholder","onChange","map","dataSource","_id","name","fontWeight","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Diogo/Desktop/MultiFlowML/multiflow/app/react-app/src/components/EditStream.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction EditStream() {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [topic, setTopic] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [dataSourceType, setDataSourceType] = useState('');\r\n    const [additionalField, setAdditionalField] = useState('');\r\n    const [playbackConfigType, setPlaybackConfigType] = useState('');\r\n    const [playbackConfigValue, setPlaybackConfigValue] = useState('');\r\n    const [dataSourceId, setDataSourceId] = useState('');\r\n    const [dataSources, setDataSources] = useState([]);\r\n    const [filePath, setFilePath] = useState('');\r\n    const [files, setFiles] = useState([]);\r\n\r\n    // Getting stream details to prepopulate forms\r\n    useEffect(() => {\r\n        const fetchStream = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:3001/streams/${id}`);\r\n                const { topic, description, dataSourceType, dataSourceId, playbackConfigType, linesPerSecond, allInSeconds } = response.data;\r\n                setTopic(topic);\r\n                setDescription(description);\r\n                setDataSourceType(dataSourceType);\r\n                setDataSourceId(dataSourceId);\r\n                setPlaybackConfigType(playbackConfigType);\r\n\r\n                // Set playbackConfigValue based on playbackConfigType\r\n                if (playbackConfigType === 'linesPerSecond') {\r\n                    setPlaybackConfigValue(linesPerSecond);\r\n                } else if (playbackConfigType === 'allInSeconds') {\r\n                    setPlaybackConfigValue(allInSeconds);\r\n                } else {\r\n                    setPlaybackConfigValue(''); // Set to default or empty if playbackConfigType is not recognized\r\n                }\r\n                setAdditionalField(dataSourceId); // Assuming additionalField is derived from dataSourceId\r\n            } catch (error) {\r\n                console.error('Error fetching stream:', error);\r\n            }\r\n        };\r\n\r\n        fetchStream();\r\n\r\n        // Fetch data sources from the server\r\n        const fetchDataSources = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:3001/dataSources');\r\n                setDataSources(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching data sources:', error);\r\n            }\r\n        };\r\n\r\n\r\n\r\n\r\n        fetchDataSources();\r\n    }, [id]);\r\n\r\n    const handleAdditionalFieldChange = (e) => {\r\n        setAdditionalField(e.target.value);\r\n    };\r\n\r\n    // Function that submits the form and updates stream details\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            let postData = { topic, description, dataSourceType, dataSourceId, playbackConfigType, playbackConfigValue };\r\n\r\n            // Conditionally add additionalField based on dataSourceType\r\n            if (dataSourceType === 'SQL') {\r\n                postData.connectionString = additionalField;\r\n            } else if (dataSourceType === 'SavedDataSource') {\r\n                postData.dataSourceId = additionalField;\r\n            } else if (dataSourceType === 'File') {\r\n                postData.filePath = additionalField;\r\n            }\r\n\r\n            // Conditionally add playback configuration based on playbackConfigType\r\n            if (playbackConfigType === 'linesPerSecond' || playbackConfigType === 'allInSeconds') {\r\n                postData[playbackConfigType] = playbackConfigValue;\r\n            } else if (playbackConfigType === 'realTime') {\r\n                postData.realTime = true;\r\n            }\r\n\r\n            await axios.put(`http://localhost:3001/streams/${id}`, postData);\r\n            // Redirect the user to the streams page after updating the stream\r\n            navigate(`/streams/${id}`);\r\n        } catch (error) {\r\n            console.error('Error updating stream:', error);\r\n        }\r\n    };\r\n\r\n    // Function that returns to details on canceling edit\r\n    const handleCancel = () => {\r\n        // Navigate back to the streams page\r\n        navigate(`/streams/${id}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {/* Page header */}\r\n            <div className='page-header mt-2'>\r\n                <h1 className='page-title'>Edit Stream</h1>\r\n            </div>\r\n\r\n            {/* Form */}\r\n            <div className='panel-content mt-2' style={{ backgroundColor: '#E6E8E6', borderRadius: '8px' }}>\r\n                <div className='container ps-4 pe-4 pt-3 pb-4'>\r\n                    <div className='col-12'>\r\n                        <form onSubmit={handleSubmit}>\r\n                            {/* Stream Topic */}\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"topic\" className=\"form-label\">Stream Topic</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"topic\" placeholder='Enter the stream topic' value={topic} onChange={(e) => setTopic(e.target.value)} />\r\n                            </div>\r\n                            {/* Stream Description */}\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor=\"description\" className=\"form-label\">Stream Description</label>\r\n                                <textarea className=\"form-control\" id=\"description\" placeholder='Enter the description' value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                            </div>\r\n                            {/* Data Source Type DropDown Menu */}\r\n                            <div className='d-flex justify-content-start align-items-center'>\r\n                                <div className=\"mb-3 col-3 me-4\">\r\n                                    <label htmlFor=\"dataSourceType\" className=\"form-label\">Data Source Type</label>\r\n                                    <select className=\"form-select\" id=\"dataSourceType\" value={dataSourceType} onChange={(e) => setDataSourceType(e.target.value)}>\r\n                                        <option value=\"\">Select Data Source Type</option>\r\n                                        <option value=\"SQL\">SQL</option>\r\n                                        <option value=\"File\">File</option>\r\n                                        <option value=\"SavedDataSource\">Saved Data Source</option>\r\n                                    </select>\r\n                                </div>\r\n                                {/* Render additional field based on selected dataSourceType */}\r\n                                {dataSourceType === 'SQL' && (\r\n                                    <div className=\"mb-3 col-3\">\r\n                                        <label htmlFor=\"connectionString\" className=\"form-label\">Connection String</label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"connectionString\" value={additionalField} onChange={handleAdditionalFieldChange} />\r\n                                    </div>\r\n                                )}\r\n                                {dataSourceType === 'File' && (\r\n                                    <div className=\"mb-3 col-3\">\r\n                                        <label htmlFor=\"filePath\" className=\"form-label\">File Path</label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"filePath\" value={additionalField} onChange={handleAdditionalFieldChange} />\r\n                                    </div>\r\n                                )}\r\n                                {dataSourceType === 'SavedDataSource' && (\r\n                                    <div className=\"mb-3 col-3\">\r\n                                        <label htmlFor=\"dataSourceId\" className=\"form-label\">Select Data Source</label>\r\n                                        <select className=\"form-select\" id=\"dataSourceId\" value={dataSourceId} onChange={(e) => setDataSourceId(e.target.value)}>\r\n                                            <option value=\"\">Select Data Source</option>\r\n                                            {dataSources.map(dataSource => (\r\n                                                <option key={dataSource._id} value={dataSource._id}>{dataSource.name}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            {/* Playback Configuration */}\r\n                            <div className='d-flex justify-content-start align-items-center'>\r\n                                {/* Playback Configuration Type */}\r\n                                <div className=\"mb-3 col-3 me-4\">\r\n                                    <label htmlFor=\"playbackConfigType\" className=\"form-label\">Playback Configuration Type</label>\r\n                                    <select className=\"form-select\" id=\"playbackConfigType\" value={playbackConfigType} onChange={(e) => setPlaybackConfigType(e.target.value)}>\r\n                                        <option value=\"\">Select Playback Type</option>\r\n                                        <option value=\"linesPerSecond\">Lines per Second</option>\r\n                                        <option value=\"allInSeconds\">All in Seconds</option>\r\n                                        <option value=\"realTime\">Real Time</option>\r\n                                    </select>\r\n                                </div>\r\n                                {/* Render additional field based on selected playbackConfigType */}\r\n                                {(playbackConfigType === 'linesPerSecond' || playbackConfigType === 'allInSeconds') && (\r\n                                    <div className=\"mb-3 col-3\">\r\n                                        <label htmlFor=\"playbackConfigValue\" className=\"form-label\">Playback Value</label>\r\n                                        <input type=\"number\" className=\"form-control\" id=\"playbackConfigValue\" value={playbackConfigValue} onChange={(e) => setPlaybackConfigValue(e.target.value)} />\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            {/* Cancel and Update Btns */}\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <button type=\"button\" className=\"btn btn-danger me-2\" style={{ fontWeight: '500' }} onClick={handleCancel}>Cancel</button>\r\n                                <button type=\"submit\" className=\"btn btn-primary\" style={{ fontWeight: '500' }}>Update</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditStream;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}