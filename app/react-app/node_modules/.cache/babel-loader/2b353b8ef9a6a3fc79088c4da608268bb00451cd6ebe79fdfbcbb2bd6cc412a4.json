{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/components/Apps.js\",\n  _s = $RefreshSig$();\n/*import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction Apps() {\r\n  return (\r\n    <div className='container col-12'>\r\n      <div className='panel-content mt-2'>\r\n        <h2 className='page-title'>Apps 2</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Apps;*/\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../App.css';\n\n/*function Apps() {\r\n    const [pythonFiles, setPythonFiles] = useState([]);\r\n    const [startStatus, setStartStatus] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n      //export FLASK_APP=server.py\r\n    //flask run --port=5010 --host=0.0.0.0 \r\n\r\n        axios.get('http://localhost:5010/list-python-files')\r\n            .then(response => {\r\n                setPythonFiles(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Erro ao obter arquivos Python:', error);\r\n            });\r\n    }, []);\r\n\r\n    const handleStartFaust = () => {\r\n        axios.post('http://localhost:5010/start-faust')\r\n            .then(response => {\r\n                setStartStatus(response.data.message);\r\n            })\r\n            .catch(error => {\r\n                console.error('Erro ao iniciar a aplicação Faust:', error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className='container col-12'>\r\n            <div className='panel-content mt-2'>\r\n                <h2 className='page-title'>Apps</h2>\r\n                <ul>\r\n                    {pythonFiles.map((file, index) => (\r\n                        <li key={index}>{file}</li>\r\n                    ))}\r\n                </ul>\r\n                <div>\r\n                    <input type='text' placeholder='Comando Faust' />\r\n                    <button onClick={handleStartFaust}>Iniciar Faust</button>\r\n                </div>\r\n                {startStatus && <p>{startStatus}</p>}\r\n            </div>\r\n        </div>\r\n    );\r\n}*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Apps() {\n  _s();\n  const [pythonFiles, setPythonFiles] = useState([]);\n  const [startStatus, setStartStatus] = useState('');\n  const [fileName, setFileName] = useState('');\n  useEffect(() => {\n    axios.get('http://localhost:5010/list-python-files').then(response => {\n      setPythonFiles(response.data);\n    }).catch(error => {\n      console.error('Erro ao obter arquivos Python:', error);\n    });\n  }, []);\n  const handleStartFaust = () => {\n    // Enviar o nome do arquivo para o servidor\n    axios.post('http://localhost:5010/start-faust', {\n      file_name: fileName\n    }).then(response => {\n      setStartStatus(response.data.message);\n    }).catch(error => {\n      console.error('Erro ao iniciar a aplicação Faust:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container col-12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-content mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"page-title\",\n        children: \"Apps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: pythonFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: file\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Nome do arquivo Python\",\n          value: fileName,\n          onChange: e => setFileName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStartFaust,\n          children: \"Iniciar Faust\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), startStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: startStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n_s(Apps, \"nXL/1VTMeFPrjrR2PpcxqwXcbvk=\");\n_c = Apps;\nexport default Apps;\nvar _c;\n$RefreshReg$(_c, \"Apps\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Apps","_s","pythonFiles","setPythonFiles","startStatus","setStartStatus","fileName","setFileName","get","then","response","data","catch","error","console","handleStartFaust","post","file_name","message","className","children","_jsxFileName","lineNumber","columnNumber","map","file","index","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/usr/src/app/src/components/Apps.js"],"sourcesContent":["/*import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction Apps() {\r\n  return (\r\n    <div className='container col-12'>\r\n      <div className='panel-content mt-2'>\r\n        <h2 className='page-title'>Apps 2</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Apps;*/\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\n\r\n/*function Apps() {\r\n    const [pythonFiles, setPythonFiles] = useState([]);\r\n    const [startStatus, setStartStatus] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n      //export FLASK_APP=server.py\r\n    //flask run --port=5010 --host=0.0.0.0 \r\n\r\n        axios.get('http://localhost:5010/list-python-files')\r\n            .then(response => {\r\n                setPythonFiles(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Erro ao obter arquivos Python:', error);\r\n            });\r\n    }, []);\r\n\r\n    const handleStartFaust = () => {\r\n        axios.post('http://localhost:5010/start-faust')\r\n            .then(response => {\r\n                setStartStatus(response.data.message);\r\n            })\r\n            .catch(error => {\r\n                console.error('Erro ao iniciar a aplicação Faust:', error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className='container col-12'>\r\n            <div className='panel-content mt-2'>\r\n                <h2 className='page-title'>Apps</h2>\r\n                <ul>\r\n                    {pythonFiles.map((file, index) => (\r\n                        <li key={index}>{file}</li>\r\n                    ))}\r\n                </ul>\r\n                <div>\r\n                    <input type='text' placeholder='Comando Faust' />\r\n                    <button onClick={handleStartFaust}>Iniciar Faust</button>\r\n                </div>\r\n                {startStatus && <p>{startStatus}</p>}\r\n            </div>\r\n        </div>\r\n    );\r\n}*/\r\n\r\nfunction Apps() {\r\n    const [pythonFiles, setPythonFiles] = useState([]);\r\n    const [startStatus, setStartStatus] = useState('');\r\n    const [fileName, setFileName] = useState('');\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:5010/list-python-files')\r\n            .then(response => {\r\n                setPythonFiles(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Erro ao obter arquivos Python:', error);\r\n            });\r\n    }, []);\r\n\r\n    const handleStartFaust = () => {\r\n        // Enviar o nome do arquivo para o servidor\r\n        axios.post('http://localhost:5010/start-faust', { file_name: fileName })\r\n            .then(response => {\r\n                setStartStatus(response.data.message);\r\n            })\r\n            .catch(error => {\r\n                console.error('Erro ao iniciar a aplicação Faust:', error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className='container col-12'>\r\n            <div className='panel-content mt-2'>\r\n                <h2 className='page-title'>Apps</h2>\r\n                <ul>\r\n                    {pythonFiles.map((file, index) => (\r\n                        <li key={index}>{file}</li>\r\n                    ))}\r\n                </ul>\r\n                <div>\r\n                    {/* Adicione um campo de entrada para o nome do arquivo */}\r\n                    <input type='text' placeholder='Nome do arquivo Python' value={fileName} onChange={(e) => setFileName(e.target.value)} />\r\n                    <button onClick={handleStartFaust}>Iniciar Faust</button>\r\n                </div>\r\n                {startStatus && <p>{startStatus}</p>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Apps;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}